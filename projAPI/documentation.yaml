openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://127.0.0.1:8000
  description: Generated server url
paths:
  /api/v1/store/update/{id}:
    put:
      tags:
      - store-controller
      operationId: updateStore
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Store'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Store'
  /api/v1/store/update/{id}/waiting/{count}:
    put:
      tags:
      - store-controller
      operationId: updateWaiting
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: count
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Store'
  /api/v1/store/update/{id}/count/{count}:
    put:
      tags:
      - store-controller
      operationId: updateCount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: count
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Store'
  /api/v1/shopping/update/{id}:
    put:
      tags:
      - shopping-controller
      operationId: updateShopping
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopping'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Shopping'
  /api/v1/shopping/update/{id}/count/{count}:
    put:
      tags:
      - shopping-controller
      operationId: updateCount_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: count
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Shopping'
  /api/v1/users:
    get:
      tags:
      - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
      - user-controller
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/users/login:
    post:
      tags:
      - user-controller
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/stores:
    get:
      tags:
      - store-controller
      operationId: getAllStores
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Store'
    post:
      tags:
      - store-controller
      operationId: addStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Store'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Store'
  /api/v1/shoppings:
    get:
      tags:
      - shopping-controller
      operationId: getAllShoppings
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopping'
    post:
      tags:
      - shopping-controller
      operationId: addShopping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopping'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Shopping'
  /api/v1/add/favorite:
    post:
      tags:
      - fav-stores-controller
      operationId: addRelation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavStores'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FavStores'
  /api/v1/add/daily:
    post:
      tags:
      - daily-info-controller
      operationId: addStore_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DailyInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DailyInfo'
  /api/v1/add/daily/{storeid}/{day}/{hour}/{count}:
    post:
      tags:
      - daily-info-controller
      operationId: addStoreWithValues
      parameters:
      - name: storeid
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: day
        in: path
        required: true
        schema:
          type: string
      - name: hour
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: count
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DailyInfo'
  /api/v1/user/{id}:
    get:
      tags:
      - user-controller
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/user/{id}/favorites:
    get:
      tags:
      - fav-stores-controller
      operationId: getUserFavStores
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /api/v1/store/{id}:
    get:
      tags:
      - store-controller
      operationId: getStore
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Store'
  /api/v1/shopping/{id}:
    get:
      tags:
      - shopping-controller
      operationId: getShopping
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Shopping'
  /api/v1/shopping/{id}/stores:
    get:
      tags:
      - shopping-controller
      operationId: getStoresInShopping
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Store'
  /api/v1/daily:
    get:
      tags:
      - daily-info-controller
      operationId: getAllDailyInfo
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyInfo'
  /api/v1/daily/{storeid}/{day}:
    get:
      tags:
      - daily-info-controller
      operationId: getStoreDayInfo
      parameters:
      - name: storeid
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: day
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyInfo'
  /api/v1/daily/{storeid}/{day}/{hour}:
    get:
      tags:
      - daily-info-controller
      operationId: getStoreHourInfo
      parameters:
      - name: storeid
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: day
        in: path
        required: true
        schema:
          type: string
      - name: hour
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /api/v1/stores/{id}:
    delete:
      tags:
      - store-controller
      operationId: removeStore
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/v1/shoppings/{id}:
    delete:
      tags:
      - shopping-controller
      operationId: removeShopping
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/v1/remove/favorite:
    delete:
      tags:
      - fav-stores-controller
      operationId: removeFavStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavStores'
        required: true
      responses:
        "200":
          description: OK
components:
  schemas:
    Store:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shop_id:
          type: integer
          format: int64
        name:
          type: string
        opening_time:
          type: string
        closing_time:
          type: string
        max_capacity:
          type: integer
          format: int32
        people_count:
          type: integer
          format: int32
        waiting:
          type: integer
          format: int32
    Shopping:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        opening_time:
          type: string
        closing_time:
          type: string
        stores:
          type: array
          items:
            $ref: '#/components/schemas/Store'
        max_capacity:
          type: integer
          format: int32
        people_count:
          type: integer
          format: int32
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: integer
          format: int32
        name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
    FavStores:
      type: object
      properties:
        user_id:
          type: integer
          format: int32
        store_id:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
    DailyInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        day:
          type: string
        hour:
          type: integer
          format: int64
        getstoreid:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
